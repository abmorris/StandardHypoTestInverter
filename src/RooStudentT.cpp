/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/
// Your description goes here...
#include "Riostream.h"
#include "RooStudentT.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include <math.h>
#include "TMath.h"
//ClassImp(RooStudentT)
RooStudentT::RooStudentT(const char *name, const char *title, RooAbsReal& _x, RooAbsReal& _mu, RooAbsReal& _s, RooAbsReal& _n) :
	RooAbsPdf(name,title),
	x("x","Observable",this,_x),
	mu("mu","mu",this,_mu),
	s("s","s",this,_s),
	n("n","n",this,_n)
{
}
RooStudentT::RooStudentT(const RooStudentT& other, const char* name) :
	RooAbsPdf(other,name),
	x("x",this,other.x),
	mu("mu",this,other.mu),
	s("s",this,other.s),
	n("n",this,other.n)
{
}
Double_t RooStudentT::evaluate() const
{
	// ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE
	const double xmu2 = (x - mu)*(x-mu);
	const double ns2 = n*s*s;
	const double factor = pow((1 + (xmu2/ns2)), 0.5*(n+1));
	const double Z = sqrt(TMath::Pi()*n*s*s)*TMath::Gamma(0.5*n)/TMath::Gamma(0.5*(n+1));
	return 1./(factor*Z) ;
}
