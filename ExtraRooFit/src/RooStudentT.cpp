/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/
// Your description goes here...
#include "Riostream.h"
#include "RooStudentT.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include <math.h>
#include "TMath.h"
ClassImp(RooStudentT)
RooStudentT::RooStudentT(const char *name, const char *title, RooAbsReal& _m, RooAbsReal& _m0, RooAbsReal& _sigma, RooAbsReal& _nu) :
	RooAbsPdf(name,title),
	m("m","Observable",this,_m),
	m0("m0","m0",this,_m0),
	sigma("sigma","sigma",this,_sigma),
	nu("nu","nu",this,_nu)
{
}
RooStudentT::RooStudentT(const RooStudentT& other, const char* name) :
	RooAbsPdf(other,name),
	m("m",this,other.m),
	m0("m0",this,other.m0),
	sigma("sigma",this,other.sigma),
	nu("nu",this,other.nu)
{
}
Double_t RooStudentT::evaluate() const
{
	// ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE
	const double mm02 = (m - m0)*(m-m0);
	const double ns2 = nu*sigma*sigma;
	const double factor = pow((1 + (mm02/ns2)), 0.5*(nu+1));
	const double Z = sqrt(TMath::Pi()*ns2)*TMath::Gamma(0.5*nu)/TMath::Gamma(0.5*(nu+1));
	return 1./(factor*Z) ;
}
